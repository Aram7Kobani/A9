
Scripting 4 - Opdrachten en Theorie
------------------------------------

Tijdsduur: 2 uur
Doel: Scripten, vervolg 1
Benodigdheden: Linux-distributie, internet
Theorie: Hoofdstukken 18, 19 en 20

== Theorie ==
Bij een if-then-else script test je of iets waar is. 
Linux geeft bij een test een status terug: 0 (waar), 1 (niet waar).
Deze status is op te vragen met de variabele $?.

== Oefening 1 ==
1. Ga naar /tmp
2. Maak bestand: `touch file`
3. Test: `test -f file`, daarna `echo $?`
4. Test met hoofdletter: `test -f File`, daarna `echo $?`

== Oefening 2 ==
Maak script8.sh:
#!/bin/bash

echo -n "Welke file wil je verwijderen? "
read BESTAND

if [ -f "$BESTAND" ]; then
    rm "$BESTAND"
    echo "Bestand $BESTAND is verwijderd."
else
    echo "Bestand $BESTAND bestaat niet."
fi

== Oefening 3 ==
Test of een programma is geïnstalleerd:
- `rpm -q samba`, daarna `echo $?`
- `rpm -q windows`, daarna `echo $?`

Maak script9.sh:
#!/bin/bash

echo -n "Welk programma wil je controleren? "
read NAAM

if rpm -q "$NAAM" > /dev/null; then
    echo "$NAAM is geïnstalleerd."
else
    echo "$NAAM is niet geïnstalleerd."
fi

Gebruik ook `grep -q`:
- `grep -q root /etc/passwd`, `echo $?`
- `grep -q Root /etc/passwd`, `echo $?`

== Opdracht 11 ==
Maak script10.sh dat controleert of een home-directory bestaat:
#!/bin/bash

echo -n "Voer een gebruikersnaam in: "
read GEBRUIKER

if [ -d "/home/$GEBRUIKER" ]; then
    echo "De home-map van $GEBRUIKER bestaat."
else
    echo "De home-map van $GEBRUIKER bestaat niet."
fi

== 21.2: Uitbreiding met elif ==
Integer operators:
- `-eq`: gelijk
- `-gt`: groter dan
- `-lt`: kleiner dan

== Oefening 4 ==
Maak script11.sh met elif:
#!/bin/bash

echo -n "Voer een getal in: "
read GETAL

if [ "$GETAL" -eq 0 ] > /dev/null 2>&1; then
    echo "Het getal is nul."
elif [ "$GETAL" -lt 0 ] > /dev/null 2>&1; then
    echo "Het getal is negatief."
elif [ "$GETAL" -gt 0 ] > /dev/null 2>&1; then
    echo "Het getal is positief."
else
    echo "Geen geldig geheel getal."
fi

Gebruik `&>> foutmelding.txt` om fouten in een bestand op te slaan.

== Overzicht van test-opties ==
- `test -f bestand` — Bestaat bestand?
- `test ! -f bestand` — Bestaat NIET?
- `test -d map` — Is directory?
- `test -x bestand` — Uitvoerbaar?
- `test -eq`, `-ne`, `-lt`, `-gt` — Integer vergelijkingen
- `test =`, `!=` — String vergelijkingen
- `-a` — en
- `-o` — of

Bekijk `man test` voor meer informatie.
